First import method to test
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

SUCCESS CASES:

For signed and unsigned ints and floats:
     >>> matrix = [[1, 2, -3], [4, 5, 6.8]]
     >>> print(matrix_divided(matrix, 2))
     [[0.5, 1.0, -1.5], [2.0, 2.5, 3.4]]

     >>> matrix = [[7.5], [-2.5]]
     >>> print(matrix_divided(matrix, 2.5))
     [[3], [-1.0]]

     >>> matrix = [[True], [False]]
     >>> print(matrix_divided(matrix, True))
     [[1.0], [0.0]]

FAIL CASES:

For empty matrix:
     >>> print(matrix_divided(None, 2))
     Traceback (most recent call last):
     ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

     >>> matrix = []
     >>> print(matrix_divided(matrix, 2))
     Traceback (most recent call last):
     ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

     >>> matrix = [[], [], []]
     >>> print(matrix_divided(matrix, 2))
     Traceback (most recent call last):
     ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

For different sized lists in matrix:
     >>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
     >>> print(matrix_divided(matrix, 2))
     Traceback (most recent call last):
     ...
     TypeError: Each row of the matrix must have the same size

     >>> matrix = [[1, 2, 3, 4], [5, 6, 7]]
     >>> print(matrix_divided(matrix, 2))
     Traceback (most recent call last):
     ...
     TypeError: Each row of the matrix must have the same size

For matrix with other data types:
     >>> matrix = [["ALX"], ["School"]]
     >>> print(matrix_divided(matrix, 2))
     Traceback (most recent call last):
     ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

     >>> matrix = [[1, 2, 3], {"ALX" : 4}]
     >>> print(matrix_divided(matrix, 2))
     Traceback (most recent call last):
     ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

     >>> matrix = [[1, 2], 3, {4, 5}]
     >>> print(matrix_divided(matrix, 2))
     Traceback (most recent call last):
     ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

     >>> matrix = {1, 2, 3, 4}
     >>> print(matrix_divided(matrix, 2))
     Traceback (most recent call last):
     ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

     >>> matrix = ([1, 2], [3, 4])
     >>> print(matrix_divided(matrix, 2))
     Traceback (most recent call last):
     ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

     >>> matrix = [[1, 2], [3, (4, 5)]]
     >>> print(matrix_divided(matrix, 2))
     Traceback (most recent call last):
     ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

For extra args:
     >>> matrix = [[1, 2, 3], [4, 5, 6.7]]
     >>> print(matrix_divided(matrix, 2, 100))
     Traceback (most recent call last):
     ...
     TypeError: matrix_divided() takes 2 positional arguments but 3 were given

For few args
     >>> matrix = [[1, 2], [3, 4]]
     >>> print(matrix_divided(matrix))
     Traceback (most recent call last):
     ...
     TypeError: matrix_divided() missing 1 required positional argument: 'div'

For div as 0 or non-int or non-float:
     >>> matrix = [[1, 2], [3, 4]]
     >>> print(matrix_divided(matrix, 0))
     Traceback (most recent call last):
     ...
     ZeroDivisionError: division by zero

     >>> matrix = [[1, 2], [3, 4]]
     >>> print(matrix_divided(matrix, "2"))
     Traceback (most recent call last):
     ...
     TypeError: div must be a number
